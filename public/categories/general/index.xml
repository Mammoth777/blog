<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>General on Hoi !</title>
    <link>http://localhost:1313/blog/categories/general/</link>
    <description>Recent content in General on Hoi !</description>
    <image>
      <title>Hoi !</title>
      <url>http://localhost:1313/blog/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>http://localhost:1313/blog/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.128.1</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Jul 2024 08:27:09 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/categories/general/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo &#43; GitHub Pages &#43; Actions 个人博客搭建</title>
      <link>http://localhost:1313/blog/posts/general/blog/</link>
      <pubDate>Thu, 04 Jul 2024 08:27:09 +0800</pubDate>
      <guid>http://localhost:1313/blog/posts/general/blog/</guid>
      <description>FAQ 1. 为什么启动后， 是空白页页面， 报错如下 WARN 2024/07/04 21:05:13 found no layout file for &amp;#34;HTML&amp;#34; for kind &amp;#34;page&amp;#34;: You should create a template file which matches Hugo Layouts Lookup Rules for this combination. 这里是因为主题加载失败， 通常我们是通过submodule加载的主题， 重新拉取主题即可
git submodule update --init --recursive </description>
    </item>
    <item>
      <title>Go 使用 grpc</title>
      <link>http://localhost:1313/blog/posts/golang/grpc-go/</link>
      <pubDate>Fri, 12 Aug 2022 11:15:14 +0800</pubDate>
      <guid>http://localhost:1313/blog/posts/golang/grpc-go/</guid>
      <description>快速开始 安装proto-gen-go-grpc插件 go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest 来看看版本
protoc-gen-go-grpc --version protoc-gen-go-grpc 1.1.0 编写proto文件 syntax = &amp;#34;proto3&amp;#34;; package hw; option go_package=&amp;#34;./hello&amp;#34;; // 告诉protoc生成的文件的包名 service Greeter { rpc SayHello (HelloRequest) returns (HelloReply) {} } message HelloRequest { string name = 1; } message HelloReply { string name = 1; } 生成代码 protoc -I=. --go_out=./grpc/service --go-grpc_out=./grpc/service ./grpc/service/hello/helloworld.proto 说明：
go_out: 生成后的*.pb.go文件位置 go-grpc_out: 生成后的*_grpc.pb.go文件位置 -I: 即-IPATH或--proto_path=PATH， 指定搜索路径参数，表示我们在那个路径下搜索.proto文件 </description>
    </item>
    <item>
      <title>General</title>
      <link>http://localhost:1313/blog/posts/general/idx/</link>
      <pubDate>Wed, 03 Aug 2022 22:55:03 +0800</pubDate>
      <guid>http://localhost:1313/blog/posts/general/idx/</guid>
      <description>通用技能</description>
    </item>
  </channel>
</rss>
